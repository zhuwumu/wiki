import{_ as e,c as l,a2 as t,o as i}from"./chunks/framework.6NRZc4eo.js";const _=JSON.parse('{"title":"线性表-链表","description":"","frontmatter":{},"headers":[],"relativePath":"02.算法/算法基础和思想/数据结构基础/线性表-链表.md","filePath":"02.算法/算法基础和思想/数据结构基础/线性表-链表.md","lastUpdated":null}'),r={name:"02.算法/算法基础和思想/数据结构基础/线性表-链表.md"};function o(n,a,s,d,c,h){return i(),l("div",null,a[0]||(a[0]=[t('<h1 id="线性表-链表" tabindex="-1">线性表-链表 <a class="header-anchor" href="#线性表-链表" aria-label="Permalink to &quot;线性表-链表&quot;">​</a></h1><blockquote><p>n个节点离散分配，彼此通过指针相连，每个节点只有一个前驱节点，每个节点只有一个后续节点，首节点没有前驱节点，尾节点没有后续节点。确定一个链表我们只需要头指针，通过头指针就可以把整个链表都能推出来。</p></blockquote><h3 id="链表优点" tabindex="-1">链表优点 <a class="header-anchor" href="#链表优点" aria-label="Permalink to &quot;链表优点&quot;">​</a></h3><ul><li>空间没有限制</li><li>插入删除元素很快</li></ul><h3 id="链表缺点" tabindex="-1">链表缺点 <a class="header-anchor" href="#链表缺点" aria-label="Permalink to &quot;链表缺点&quot;">​</a></h3><ul><li>查找很慢</li></ul><h3 id="分类" tabindex="-1">分类 <a class="header-anchor" href="#分类" aria-label="Permalink to &quot;分类&quot;">​</a></h3><ul><li>单向链表：一个节点指向下一个节点。</li><li>双向链表：一个节点有2个指针域。</li><li>循环链表：能通过任何一个节点找到其他所有的节点，将两种（双向/单向）链表的最后一个节点指向第一个节点，从而实现循环。</li></ul>',8)]))}const p=e(r,[["render",o]]);export{_ as __pageData,p as default};
