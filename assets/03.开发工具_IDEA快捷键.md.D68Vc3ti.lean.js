import{_ as p,c as e,a0 as r,o as l}from"./chunks/framework.DNN_1AUP.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"03.开发工具/IDEA快捷键.md","filePath":"03.开发工具/IDEA快捷键.md"}'),a={name:"03.开发工具/IDEA快捷键.md"};function i(o,t,s,n,c,d){return l(),e("div",null,t[0]||(t[0]=[r('<h4 id="idea快捷键" tabindex="-1">IDEA快捷键 <a class="header-anchor" href="#idea快捷键" aria-label="Permalink to &quot;IDEA快捷键&quot;">​</a></h4><ul><li>查看类中所有的方法：Ctrl+F12</li></ul><p>Ctrl+z:撤销</p><p><strong>Ctrl+shift+z:重做(撤销冲正)</strong></p><p>Ctrl+/：单行注释</p><p>Ctrl+Shift+/:多行注释</p><p>Ctrl+Alt+L:格式化</p><p>Ctrl+Alt+o:优化import,自动导入</p><p>Alt+Enter:</p><p>Ctrl+D:复制当前行并且粘贴到当前行之下</p><p>Ctrl+F:当前文件检索</p><p>Ctrl+Shift+F:全文检索</p><p>Ctrl+R:当前文件替换</p><p>Ctrl+Shift+R:全文检索替换</p><p>Double Shift:全局查找</p><p>Alt+F7查找当前这个方法被调用的地方</p><p>Ctrl+Alt+B:快速定位当前方法的实现</p><p>Alt+Insert:插入构造、get/set、overriding、实现接口</p><h4 id="idea进行断点调试的快捷键" tabindex="-1">idea进行断点调试的快捷键 <a class="header-anchor" href="#idea进行断点调试的快捷键" aria-label="Permalink to &quot;idea进行断点调试的快捷键&quot;">​</a></h4><p>F7:单步调试，进入函数内部</p><p>F8:单步调试,不进入函数内部</p><p>F9:继续执行，进入下一个断点或执行完程序</p><p>Shift+F7:选择要进入的函数</p><p>Shift+F8:跳出函数</p><p>Alt+F8:执行表达式查看结果</p><p>Alt+F9:运行到断点</p><p>F8：下一步=F6</p><p>Ctrl + O：选择父级可重写的方法=Ctrl + O</p><p>ctrl+alt+v：根据方法生成变量=Ctrl+1</p><p>F9 resume programe 恢复程序 Alt+F10 show execution point 显示执行断点 F8 Step Over 相当于eclipse的f6 跳到下一步 F7 Step Into 相当于eclipse的f5就是 进入到代码 Alt+shift+F7 Force Step Into 这个是强制进入代码 Shift+F8 Step Out 相当于eclipse的f8跳到下一个断点，也相当于eclipse的f7跳出函数 Atl+F9 Run To Cursor 运行到光标处 ctrl+shift+F9 debug运行java类 ctrl+shift+F10 正常运行java类 alt+F8 debug时选中查看值dsad</p><blockquote><p>查看类的继承关系</p></blockquote><ol><li><p><strong>使用继承关系图</strong>： hierarchy：查看类层级关系图 。可以查看Navigate中Type Hierarchy 在 IntelliJ IDEA 中，你可以使用继承关系图来查看一个类的子类继承图。打开你要查看的类文件，然后按下快捷键 Ctrl+H（Windows/Linux）或 Command+Shift+H（Mac）。这将打开一个继承关系图窗口，其中包含了该类及其所有子类的继承关系图。</p><p>ctrl选中要展示的，然后右键Diagrams-&gt;show Diagram</p></li><li><p><strong>使用结构视图</strong>：在 IntelliJ IDEA 中，你可以使用结构视图来查看一个类的所有子类。打开你要查看的类文件，然后在左侧的导航栏中选择 &quot;Project&quot; 视图。然后，在 Project 视图中找到你要查看的类，右键点击该类并选择 &quot;Show Subclasses&quot;。这将在一个新的窗口中列出该类的所有子类。</p></li></ol>',32)]))}const f=p(a,[["render",i]]);export{u as __pageData,f as default};
