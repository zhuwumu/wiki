import{_ as a,c as i,o as s,ah as e,c9 as t,ca as o}from"./chunks/framework.DVT8N-ZV.js";const h=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"05.架构/架构900讲/数据库.md","filePath":"05.架构/架构900讲/数据库.md","lastUpdated":null}'),r={name:"05.架构/架构900讲/数据库.md"};function n(p,l,_,c,d,m){return s(),i("div",null,[...l[0]||(l[0]=[e('<h2 id="_049、比mysql快100倍-解读cassandra列式数据库高性能背后的原理" tabindex="-1">049、比MySQL快100倍？解读cassandra列式数据库高性能背后的原理！ <a class="header-anchor" href="#_049、比mysql快100倍-解读cassandra列式数据库高性能背后的原理" aria-label="Permalink to “049、比MySQL快100倍？解读cassandra列式数据库高性能背后的原理！”">​</a></h2><p><strong>一、概念</strong></p><ol><li>行式存储：常见关系型数据库，一行一行的存储。</li><li>列式存储：cassandra、clikchouse等，按列存储。应用场景：批处理、超大规模即时查询。</li></ol><p><strong>二、比较快的原因</strong></p><ol><li><p>磁盘顺序读写比随机独写要快，列式数据库采用顺序写。</p><p><img src="'+t+'" alt="76870f32-7e5d-4238-b508-fbaa7ff6c41b"></p><p><img src="'+o+'" alt="8e2b6613-7840-4575-a6bb-0196828da5fc"></p></li><li><p>数据库不读取无效数据</p><ol><li>只查询指定列上的数据</li><li>只返回指定列上的数据</li><li>磁盘I/O效率高</li></ol></li><li><p>数据压缩比大</p><ol><li>数据相关性大</li><li>数据压缩比高，相同的数据类型，可以使用相应的算法</li><li>利用Cache I/O</li></ol></li></ol><p><strong>三、列式存储遗留问题</strong></p><ol><li>如何高效新增：多个列族，并发写磁盘。</li><li>如何高效更新：添加一个版本号，其实将原数据复制一份，并不是真实更新。</li><li>如何高效删除：添加删除标记keyType=Delete，类似逻辑删除，等程序空闲时，再进行物理删除。</li></ol>',7)])])}const g=a(r,[["render",n]]);export{h as __pageData,g as default};
