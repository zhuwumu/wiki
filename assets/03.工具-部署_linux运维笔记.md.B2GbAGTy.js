import{_ as i,c as a,o as l,ah as t}from"./chunks/framework.Dgw6jcLr.js";const c=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"03.工具-部署/linux运维笔记.md","filePath":"03.工具-部署/linux运维笔记.md","lastUpdated":null}'),n={name:"03.工具-部署/linux运维笔记.md"};function e(p,s,h,d,k,r){return l(),a("div",null,[...s[0]||(s[0]=[t(`<p>linux学习笔记</p><h2 id="一、目录含义" tabindex="-1">一、目录含义 <a class="header-anchor" href="#一、目录含义" aria-label="Permalink to “一、目录含义”">​</a></h2><p>usr是曾经的用户目录，现在已经被/home目录取代了。可以理解为Unix System Resource，即Unix系统资源目录，系统核心所在，现代的/usr只专门存放各类程序和数据。</p><p>/usr：系统级的目录，可以理解为C:/windows</p><p>/usr/lib理解为C:/windows/System32</p><p>/usr/local：理解为C:/windows/Program Files。用户自己编译的软件会默认安装到这个目录下</p><p>/opt:用户级的程序目录。可以理解为D:/software。这里可以放置第三方大型软件，当不需要了时，直接rm-rf。麒麟系统，默认第三方软件安装目录示例：/opt/software/java/jdk1.8。当磁盘空间不足时，可将/opt单独挂载到其他磁盘使用</p><h2 id="二、常用命令" tabindex="-1">二、常用命令 <a class="header-anchor" href="#二、常用命令" aria-label="Permalink to “二、常用命令”">​</a></h2><p>1、删除目录和文件：<code>rm [options] name...</code></p><p>命令参数：</p><p><code>-i</code> 删除前逐一询问确认</p><p><code>-f </code><strong>文档类型</strong>直接删除，无需逐一确认，即使原档案属性设为唯读</p><p><code>-r</code> 将目录及以下全部删除</p><p>示例：目录直接删除 <code>*[root@localhost opt]# rm -rf test2* </code></p><p>2、切换root用户</p><p>直接输入<code>su</code>，回车，输入密码即可。若失败，可能没有为root设置密码，使用<code>sudo password root</code>来设置root账号密码</p><p>su含义为switch user，用于变更用户。sudo命令则是以管理员身份执行指令</p><p>3、常用单个命令</p><table tabindex="0"><thead><tr><th>命令</th><th style="text-align:left;">含义</th><th>命令</th><th>含义</th></tr></thead><tbody><tr><td>whoami</td><td style="text-align:left;">查看当前用户</td><td></td><td></td></tr><tr><td>shutdown -r</td><td style="text-align:left;">重新启动</td><td></td><td></td></tr><tr><td>ip address</td><td style="text-align:left;">查看ip</td><td></td><td></td></tr><tr><td>sudo -i</td><td style="text-align:left;">切换root用户</td><td></td><td></td></tr><tr><td>netstat -anp |grep 8080</td><td style="text-align:left;"></td><td></td><td></td></tr><tr><td>find -name &#39;nginx&#39;</td><td style="text-align:left;">查找</td><td></td><td></td></tr><tr><td></td><td style="text-align:left;"></td><td></td><td></td></tr><tr><td></td><td style="text-align:left;"></td><td></td><td></td></tr><tr><td></td><td style="text-align:left;"></td><td></td><td></td></tr></tbody></table><p>当前环境：centos7及以上</p><p>当前用户：root</p><p>node、jdk默认安装目录\`/usr/local/lib</p><h2 id="_1、安装node" tabindex="-1">1、安装node <a class="header-anchor" href="#_1、安装node" aria-label="Permalink to “1、安装node”">​</a></h2><p>node官网下载node-v14.9.0-linux-x64.tar.gz文件</p><p>xftp上传到<code>/usr/local/lib</code>目录下，解压文件，当前目录下命令<code>tar -xzvf node-v14.9.0-linux-x64.tar.gz</code>。</p><p>将目录改为node14.9.0，命令<code>mv node-v14.9.0-linux-x64 node14.9.0</code></p><p>1、验证是否安装成功。</p><p><code>cd node14.9.0/bin </code></p><p><code>cd ./node -v</code>，输出v14.9.0成功</p><p>2、配置环境变量，满足全局命令可用</p><p>输入命令<code>vim /etc/profile</code>，打开文件进行编辑,文档尾部加入，多个环境变量用:进行隔开即可</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NODE_HOME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/usr/local/lib/node14.9.0</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\${NODE_HOME}/BIN:$PATH</span></span></code></pre></div><p>键盘Esc按键，推出编辑模式，shift+:保存编辑内容</p><p>刷新|重启电脑生效。刷新命令<code>source /etc/profile</code>，如果不是可执行命令，则需要重启电脑</p><h2 id="_2、安装jre" tabindex="-1">2、安装JRE <a class="header-anchor" href="#_2、安装jre" aria-label="Permalink to “2、安装JRE”">​</a></h2><p>将压缩包<code>jre-8u351-linux-x64.tar.gz</code>放到<code>/usr/local/lib</code>目录下</p><p><code>tar -xzvf jre-8u351-linux-x64.tar.gz</code>解压文件，修改目录名为jre1.8</p><p>编辑<code>etc/profile</code>文件。在export处添加如下</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> JRE_HOME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/usr/local/lib/jre1.8</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\${JRE_HOME}/bin:\${NODE_HOME}/bin:$PATH</span></span></code></pre></div><p>配置环境变量、刷新</p><p><code>source /etc/profile</code></p><h2 id="_3、mysql" tabindex="-1">3、Mysql <a class="header-anchor" href="#_3、mysql" aria-label="Permalink to “3、Mysql”">​</a></h2><p>(<a href="https://www.cnblogs.com/renlywen/p/13502794.html" target="_blank" rel="noreferrer">https://www.cnblogs.com/renlywen/p/13502794.html</a>)</p><p>1、上传文件到<code>/usr/local</code>解压文件，目录更名为mysql5.7</p><p>2、 给mysql目录添加权限，通常来说是直接创建mysql用户然后，添加权限，不过我自己觉得麻烦是直接给mysql目录用root账户</p><p><code> chown -R root:root /usr/local/mysql</code></p><p>3、 在mysql5.7目录中创data和logs目录</p><p><code>mkdir {data,logs}</code></p><p>4、 修改|新增/etc/my.cnf文件，有的系统可能还要<strong>创建/etc/my.cnf.d文件夹</strong>否则会报错找不到该目录</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@master mysql]# chown 777 /etc/my.cnf</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@master mysql]# vim /etc/my.cnf</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[mysqld]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">character_set_server</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">utf8</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">character_set_server</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">utf8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">init_connect</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;SET NAMES utf8&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">basedir</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/root/datasoft/mysql</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">datadir</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/root/datasoft/mysql/data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">socket</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/root/datasoft/mysql/mysql.sock</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#开启ip绑定 </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#bind-address = 0.0.0.0 </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log_timestamps</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> SYSTEM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#open_files_limit=30000 max_connections=3000 </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#控制其通信缓冲区的最大长度 </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">max_allowed_packet</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">256M</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#设置忽略大小写(简单来说就是sql语句是否严格)，默认库名表名保存为小写, 不区分大小写</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lower_case_table_names</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#Disabling symbolic-links is recommended to prevent assorted security risks </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">symbolic-links</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[mysqld_safe] </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">log-error</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/root/datasoft/mysql/logs/mysqld.log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pid-file</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/root/datasoft/mysql/data/mysqld.pid</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[client] </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">socket</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/root/datasoft/mysql/mysql.sock</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#default-character-set=utf8</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># include all files from the config directory</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">includedir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/my.cnf.d</span></span></code></pre></div><p>备份</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[mysqld]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#设置mysql的安装目录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">basedir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =/usr/local/mysql-5.7.37</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#设置mysql数据库的数据存放目录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">datadir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/local/mysql-5.7.37/data</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#设置端口</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">port</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3306</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">socket</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /tmp/mysql.sock</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#设置字符集</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">character-set-server</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">utf8</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#日志存放目录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log-error</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/local/mysql-5.7.37/data/mysqld.log</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pid-file</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/local/mysql-5.7.37/data/mysqld.pid</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#允许时间类型的数据为零(去掉NO_ZERO_IN_DATE,NO_ZERO_DATE)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sql_mode</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION</span></span></code></pre></div><p>5、初始化mysql</p><p>basedir为我们的mysql目录，datadir为我们创建的保存数据的目录。初始化后会打印出初始密码，如果忘记了可以清空datadir目录重新执行初始化。</p><p>查看日志：<code>cat /usr/local/mysql-5.7.37/logs/mysqld.log</code>。模拟时并未打印密码也没有生成日志</p><p><code>[root@master mysql]# ./bin/mysqld --initialize --user=root --basedir=/root/datasoft/mysql/ --datadir=/root/datasoft/mysql/data/</code></p><p>6、把启动脚本放到开机初始化目录</p><p><code>cp support-files/mysql.server /etc/init.d/mysql</code></p><p>7、开启mysql</p><p><code>service mysql start</code></p><p>8、登录，密文</p><p><code>mysql -uroot -p</code></p><p>9、修改初始密码</p><p><code>mysql&gt;set password for root@localhost = password(&#39;123456&#39;);</code></p><p>10、添加远程访问权限</p><p><code>mysql&gt;GRANT ALL PRIVILEGES ON *.* TO &#39;root&#39;@&#39;%&#39; IDENTIFIED BY &#39;mysql密码&#39; WITH GRANT OPTION;</code></p><p>11、刷新</p><p>mysql&gt;FLUSH PRIVILEGES; mysql&gt;exit;</p><p>12、打开防火墙端口</p><p><code>firewall-cmd --zone=public --add-port=3306/tcp --permanent</code></p><p>13、重启防火墙</p><p>firewall-cmd --reload #重启firewall firewall-cmd --list-ports #查看已经开放的端口</p><p>14、设置开机启动</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/local/mysql/support-files/mysql.server</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/init.d/mysql</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">查看mysql服务是否在服务配置中</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chkconfig</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --list</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mysql</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">若没有，则把mysql注册为开机启动的服务，然后在进行查看</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chkconfig</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mysql</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chkconfig</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --list</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mysql</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">启动</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 或</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 停止</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">service</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mysql</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">service</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mysql</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stop</span></span></code></pre></div><h2 id="mysql卸载" tabindex="-1">mysql卸载 <a class="header-anchor" href="#mysql卸载" aria-label="Permalink to “mysql卸载”">​</a></h2><p>查看安装了哪写服务</p><p><code>rpm -qa|grep -i mysql</code></p><h2 id="_4、redis" tabindex="-1">4、redis <a class="header-anchor" href="#_4、redis" aria-label="Permalink to “4、redis”">​</a></h2><p>1、解压文件，可不用修改目录名。进入redis-5.0.4目录下，执行<code>make</code></p><p>(可选make install PREFIX=/usr/local/lib/redis-5.0.4)库文件会存放在/usr/local/lib目录。配置文件会存放在/usr/local/etc目录。其他的资源文件会存放在usr/local/share目录。这里指定号目录也方便后续的卸载，后续直接rm -rf /usr/local/redis 即可删除redis。 这一步执行完以后，在/opt/redis-5.0.4目录下就会出现一个bin目录，里面是redis的一些可执行程序，主要是与源码分开</p><p>2、make完后 redis-5.0.4/src目录下会出现编译后的redis服务程序redis-server,还有用于测试的客户端程序redis-cli</p><p>3、进入redis-5.0.4/src目录下，启动默认服务，输入<code>./redis-server &amp;</code> &amp;后台运行。</p><p>注意这种方式启动redis 使用的是默认配置。也可以通过启动参数告诉redis使用指定配置文件使用下面命令启动</p><p><code>./src/redis-server&amp; ./redis.conf</code></p><blockquote><p>设置开机自启</p></blockquote><h2 id="_5、ngnix" tabindex="-1">5、ngnix <a class="header-anchor" href="#_5、ngnix" aria-label="Permalink to “5、ngnix”">​</a></h2><blockquote><p><a href="https://blog.csdn.net/xiawenquan/article/details/125122794" target="_blank" rel="noreferrer">https://blog.csdn.net/xiawenquan/article/details/125122794</a></p></blockquote><h2 id="_6、jar开机自启" tabindex="-1">6、jar开机自启 <a class="header-anchor" href="#_6、jar开机自启" aria-label="Permalink to “6、jar开机自启”">​</a></h2><blockquote><p><a href="https://blog.csdn.net/lep1995/article/details/129176336" target="_blank" rel="noreferrer">https://blog.csdn.net/lep1995/article/details/129176336</a></p></blockquote>`,89)])])}const y=i(n,[["render",e]]);export{c as __pageData,y as default};
