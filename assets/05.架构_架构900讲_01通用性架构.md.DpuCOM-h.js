import{_ as l,c as d,o as a,ah as e}from"./chunks/framework.Dgw6jcLr.js";const n=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"05.架构/架构900讲/01通用性架构.md","filePath":"05.架构/架构900讲/01通用性架构.md","lastUpdated":null}'),i={name:"05.架构/架构900讲/01通用性架构.md"};function r(_,t,p,o,s,h){return a(),d("div",null,[...t[0]||(t[0]=[e('<h2 id="_051、你是微博的架构师-大v更新动态-动态通知采用推push还是拉pull更合适" tabindex="-1">051、你是微博的架构师，大V更新动态，动态通知采用推Push还是拉Pull更合适？ <a class="header-anchor" href="#_051、你是微博的架构师-大v更新动态-动态通知采用推push还是拉pull更合适" aria-label="Permalink to “051、你是微博的架构师，大V更新动态，动态通知采用推Push还是拉Pull更合适？”">​</a></h2><p>Push：对应的写扩散</p><p>Pull：对应的读扩散</p><table tabindex="0"><thead><tr><th></th><th>Push模式</th><th>Pull拉取模式</th></tr></thead><tbody><tr><td>实时性</td><td>较好，通过网络管道实时发送</td><td>较差，取决于定时轮询时间</td></tr><tr><td>服务器状态</td><td>有状态，需持久化粉丝动态队列</td><td>无状态，根据请求时间</td></tr><tr><td>风险项</td><td>大V动态的并发“写扩散”问题。大量动态队列持久化造成磁盘IO</td><td>大量粉丝准点“读扩散”问题，大V粉丝准点并发查询搞垮服务器</td></tr><tr><td>应用场景</td><td>微信</td><td>微博（早期）</td></tr></tbody></table><p>写扩散优化：</p><ol><li>设置上限，微信好友5000个</li><li>限流策略，X分钟完成消息分布</li><li>优化存储方案，采用NoSQL或大数据方案。</li></ol><p>读扩散优化：</p><ol><li>MQ削峰填谷，超长队列直接拒绝。</li><li>增加轮询间隔，减少请求次数</li><li>服务器增加缓存，优化查询效率</li><li>增加验证码，分散时间，减少机器人刷票</li></ol><p>推特的混合模式：</p><ul><li>粉丝量小于X，使用Push模式。</li><li>粉丝量大于X，使用Pul模式。</li></ul><p>当1个系统被多个系统依赖时，才有Pull模式更合适，由主提供接口，下游调用。或者中间加入MQ中间件，进行解耦。</p>',11)])])}const P=l(i,[["render",r]]);export{n as __pageData,P as default};
