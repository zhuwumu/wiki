import{_ as i,c as a,o as h,ah as l}from"./chunks/framework.DVT8N-ZV.js";const c=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"02.前端技术栈/Html.md","filePath":"02.前端技术栈/Html.md","lastUpdated":null}'),t={name:"02.前端技术栈/Html.md"};function n(e,s,k,p,d,r){return h(),a("div",null,[...s[0]||(s[0]=[l(`<ol><li>pnpm全局安装<code>npm install pnpm -g</code></li></ol><h2 id="前端" tabindex="-1">前端 <a class="header-anchor" href="#前端" aria-label="Permalink to “前端”">​</a></h2><ol><li><p>vue表单重置</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.chenwtdaddform</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.$options.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().chenwtdaddform;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//在点击提交的时候,把之前存在 data里的chenwtdaddform原始值拷贝一份,而后从新赋值</span></span></code></pre></div></li><li><p><code>JSON.stringify(e)</code></p></li><li><p>自定义组件不加载</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uniapp官方文档上明确写出：uni-app</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 组件支持的生命周期，与vue标准组件的生命周期相同。组件里没有页面级的onLoad等生命周期</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 使用vue的生命周期函数</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mounted</span></span></code></pre></div></li><li><p>页面跳转传输对象</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 加密</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> detail</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> encodeURIComponent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JSON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stringify</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(data));</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 解密</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> detail </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> JSON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">parse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">decodeURIComponent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(options.detail));</span></span></code></pre></div></li><li><p>路径中取值。利用$符号，省去用+拼接</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> detail;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">url</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\`</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pages</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">square</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">detail</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">detail</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">detail</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\${detail}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">page</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">list\`</span></span></code></pre></div></li></ol><h3 id="css" tabindex="-1">CSS <a class="header-anchor" href="#css" aria-label="Permalink to “CSS”">​</a></h3><ol><li><p>固定定位<code>positation:fixed</code></p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    position</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">fixed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    bottom</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li></ol><h3 id="git" tabindex="-1">GIT <a class="header-anchor" href="#git" aria-label="Permalink to “GIT”">​</a></h3><ol><li><p>下载分支代码</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -b</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">分支名称</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -b</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://192.168.1.91:8088/dake/datatech-exchange-cloud.git</span></span></code></pre></div></li><li><p>本地修改不保存，恢复如初</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> reset</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> head</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#若出现Unstaged changes after reset，使用下面的命令</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">1、git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">2、git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> reset</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --hard</span></span></code></pre></div></li></ol><h3 id="前端请求加签名及后端验签流程剖析" tabindex="-1">前端请求加签名及后端验签流程剖析 <a class="header-anchor" href="#前端请求加签名及后端验签流程剖析" aria-label="Permalink to “前端请求加签名及后端验签流程剖析”">​</a></h3><blockquote><p><a href="https://www.diandian100.cn/dafa900f.html" target="_blank" rel="noreferrer">https://www.diandian100.cn/dafa900f.html</a></p></blockquote><h2 id="_1、tps是什么意思" tabindex="-1">1、TPS是什么意思？ <a class="header-anchor" href="#_1、tps是什么意思" aria-label="Permalink to “1、TPS是什么意思？”">​</a></h2><p>TPS全称是：Transaction Per Second，意思是指每秒事务数。TPS是衡量系统性能的一个非常重要的指标。</p><p><em>人们常常混淆并发量与TPS，它们两者的作用不同。如同一条马路，我们关注点是：有几个车道，以及是否拥挤？并发量对应于车道，而TPS对应于拥挤程度。</em></p><p>在做性能测试的时候，传统方式都是用并发数来衡量系统的性能，一般适用于一些网页站点的首页、H5页面的压测。这是站在客户端的视角。而TPS则直接衡量系统的吞吐能力，应用场景主要是一些动态的接口API，例如登录、提交订单等等。这是站在服务端视角的。</p><h2 id="_2、tps和并发量的关系" tabindex="-1">2、TPS和并发量的关系 <a class="header-anchor" href="#_2、tps和并发量的关系" aria-label="Permalink to “2、TPS和并发量的关系”">​</a></h2><p>TPS是每秒事务数，但是事务是要靠用户做出来的，假如1个用户在1秒内完成1笔事务，那么TPS明显就是1；如果某笔业务响应时间是1 ms，那么1个用户在1s内能完成1000笔事务，TPS就是1000了；如果某笔业务响应时间是1s，那么1个用户在1s内只能完成1笔事务，要想达到1000 TPS，至少需要1000个用户；因此可以说1个用户可以产生1000 TPS，1000个用户也可以产生1000 TPS，无非是看响应时间快慢。</p><h2 id="_3、如何获取并发量和tps" tabindex="-1">3、如何获取并发量和TPS <a class="header-anchor" href="#_3、如何获取并发量和tps" aria-label="Permalink to “3、如何获取并发量和TPS”">​</a></h2><h3 id="_3-1、并发量获取方式" tabindex="-1">3.1、并发量获取方式： <a class="header-anchor" href="#_3-1、并发量获取方式" aria-label="Permalink to “3.1、并发量获取方式：”">​</a></h3><p>可选取高峰时刻，在一定时间内使用系统的人数，这些人数可认为是在线用户数，并发用户数可以取10%，例如在半个小时内，使用系统的用户数为10万，那么取10%（即1万）作为并发用户数基本就够了。</p><h3 id="_3-2、tps获取方式" tabindex="-1">3.2、TPS获取方式： <a class="header-anchor" href="#_3-2、tps获取方式" aria-label="Permalink to “3.2、TPS获取方式：”">​</a></h3><p>可选取高峰时刻，在一定时间内（如3分钟~10分钟），获取系统总业务量，计算单位时间（秒）内完成的笔数，乘以2~5倍作为峰值的TPS，例如峰值3分钟内处理订单18万笔，平均TPS是1000，峰值TPS可以是2000~5000。</p><h2 id="_4、如何评价系统的性能" tabindex="-1">4、如何评价系统的性能 <a class="header-anchor" href="#_4、如何评价系统的性能" aria-label="Permalink to “4、如何评价系统的性能”">​</a></h2><p>针对服务器端的性能，以TPS为主来衡量系统的性能，并发用户数为辅来衡量系统的性能。</p><h2 id="_5、小结" tabindex="-1">5、小结 <a class="header-anchor" href="#_5、小结" aria-label="Permalink to “5、小结”">​</a></h2><p>综上所述，可以得出以下结论：</p><ul><li>系统的性能由TPS决定，跟并发用户数没有多大关系。</li><li>系统的最大TPS是一定的（在一个范围内），但并发用户数不一定，可以调整。</li></ul>`,25)])])}const o=i(t,[["render",n]]);export{c as __pageData,o as default};
