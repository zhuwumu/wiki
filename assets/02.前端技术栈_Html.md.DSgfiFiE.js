import{_ as e,c as t,a0 as r,o}from"./chunks/framework.DNN_1AUP.js";const c=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"02.前端技术栈/Html.md","filePath":"02.前端技术栈/Html.md"}'),l={name:"02.前端技术栈/Html.md"};function i(s,a,n,h,P,p){return o(),t("div",null,a[0]||(a[0]=[r('<h2 id="_1、tps是什么意思" tabindex="-1">1、TPS是什么意思？ <a class="header-anchor" href="#_1、tps是什么意思" aria-label="Permalink to &quot;1、TPS是什么意思？&quot;">​</a></h2><p>TPS全称是：Transaction Per Second，意思是指每秒事务数。TPS是衡量系统性能的一个非常重要的指标。</p><p><em>人们常常混淆并发量与TPS，它们两者的作用不同。如同一条马路，我们关注点是：有几个车道，以及是否拥挤？并发量对应于车道，而TPS对应于拥挤程度。</em></p><p>在做性能测试的时候，传统方式都是用并发数来衡量系统的性能，一般适用于一些网页站点的首页、H5页面的压测。这是站在客户端的视角。而TPS则直接衡量系统的吞吐能力，应用场景主要是一些动态的接口API，例如登录、提交订单等等。这是站在服务端视角的。</p><h2 id="_2、tps和并发量的关系" tabindex="-1">2、TPS和并发量的关系 <a class="header-anchor" href="#_2、tps和并发量的关系" aria-label="Permalink to &quot;2、TPS和并发量的关系&quot;">​</a></h2><p>TPS是每秒事务数，但是事务是要靠用户做出来的，假如1个用户在1秒内完成1笔事务，那么TPS明显就是1；如果某笔业务响应时间是1 ms，那么1个用户在1s内能完成1000笔事务，TPS就是1000了；如果某笔业务响应时间是1s，那么1个用户在1s内只能完成1笔事务，要想达到1000 TPS，至少需要1000个用户；因此可以说1个用户可以产生1000 TPS，1000个用户也可以产生1000 TPS，无非是看响应时间快慢。</p><h2 id="_3、如何获取并发量和tps" tabindex="-1">3、如何获取并发量和TPS <a class="header-anchor" href="#_3、如何获取并发量和tps" aria-label="Permalink to &quot;3、如何获取并发量和TPS&quot;">​</a></h2><h3 id="_3-1、并发量获取方式" tabindex="-1">3.1、并发量获取方式： <a class="header-anchor" href="#_3-1、并发量获取方式" aria-label="Permalink to &quot;3.1、并发量获取方式：&quot;">​</a></h3><p>可选取高峰时刻，在一定时间内使用系统的人数，这些人数可认为是在线用户数，并发用户数可以取10%，例如在半个小时内，使用系统的用户数为10万，那么取10%（即1万）作为并发用户数基本就够了。</p><h3 id="_3-2、tps获取方式" tabindex="-1">3.2、TPS获取方式： <a class="header-anchor" href="#_3-2、tps获取方式" aria-label="Permalink to &quot;3.2、TPS获取方式：&quot;">​</a></h3><p>可选取高峰时刻，在一定时间内（如3分钟~10分钟），获取系统总业务量，计算单位时间（秒）内完成的笔数，乘以2~5倍作为峰值的TPS，例如峰值3分钟内处理订单18万笔，平均TPS是1000，峰值TPS可以是2000~5000。</p><h2 id="_4、如何评价系统的性能" tabindex="-1">4、如何评价系统的性能 <a class="header-anchor" href="#_4、如何评价系统的性能" aria-label="Permalink to &quot;4、如何评价系统的性能&quot;">​</a></h2><p>针对服务器端的性能，以TPS为主来衡量系统的性能，并发用户数为辅来衡量系统的性能。</p><h2 id="_5、小结" tabindex="-1">5、小结 <a class="header-anchor" href="#_5、小结" aria-label="Permalink to &quot;5、小结&quot;">​</a></h2><p>综上所述，可以得出以下结论：</p><ul><li>系统的性能由TPS决定，跟并发用户数没有多大关系。</li><li>系统的最大TPS是一定的（在一个范围内），但并发用户数不一定，可以调整。</li></ul>',16)]))}const S=e(l,[["render",i]]);export{c as __pageData,S as default};
